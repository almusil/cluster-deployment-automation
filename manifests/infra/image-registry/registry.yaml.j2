apiVersion: apps/v1
kind: Deployment
metadata:
  name: registry
  namespace: openshift-image-registry
spec:
  replicas: 1
  selector:
    matchLabels:
      app: registry
  template:
    metadata:
      labels:
        app: registry
    spec:
      containers:
        - name: registry
          image: registry:2
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
            limits:
              memory: "1Gi" 
              cpu: "500m"
          env:
            # Use config file instead of individual env vars
            - name: REGISTRY_CONFIGURATION_PATH
              value: /etc/docker/registry/config.yml
          ports:
            - containerPort: 5000
          livenessProbe:
            httpGet:
              path: /v2/
              port: 5000
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 10
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /v2/
              port: 5000
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 5
            failureThreshold: 3
          volumeMounts:
            - name: registry-storage
              mountPath: /var/lib/registry
            - name: registry-config
              mountPath: /etc/docker/registry
              readOnly: true
      volumes:
        - name: registry-storage
          persistentVolumeClaim:
            claimName: registry-storage
        - name: registry-config
          configMap:
            name: registry-config
---
apiVersion: v1
kind: Service
metadata:
  name: registry
  namespace: openshift-image-registry
spec:
  selector:
    app: registry
  ports:
    - protocol: TCP
      port: 5000
      targetPort: 5000
---

apiVersion: v1
kind: Service
metadata:
  name: registry-loadbalancer
  namespace: openshift-image-registry
spec:
  type: LoadBalancer
  selector:
    app: registry
  ports:
    - protocol: TCP
      port: 5000
      targetPort: 5000
  externalIPs:
    - {{ external_ip }}
---

apiVersion: v1
kind: Service  
metadata:
  name: registry-nodeport
  namespace: openshift-image-registry
spec:
  type: NodePort
  selector:
    app: registry
  ports:
    - protocol: TCP
      port: 5000
      targetPort: 5000
      nodePort: 30500

---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: default-route
  namespace: openshift-image-registry
spec:
  host: default-route-openshift-image-registry.apps.{{ external_ip }}.{{ base_dns_domain }}
  to:
    kind: Service
    name: registry
  port:
    targetPort: 5000
  tls:
    termination: edge
    insecureEdgeTerminationPolicy: Allow 